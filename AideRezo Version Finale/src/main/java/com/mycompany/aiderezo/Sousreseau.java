/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.aiderezo;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author t.real
 */
public class Sousreseau extends javax.swing.JFrame {

    /**
     * @return La classe
     */
    /**
     * Creates new form Sousreseau
     */
    public Sousreseau() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AdresseIp2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        SousReseau = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        sendPing = new javax.swing.JButton();
        AdresseIp1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        SousReseau1 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aide Rezo");

        AdresseIp2.setToolTipText("Saisir l'adresse ip: ");
        AdresseIp2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdresseIp2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Adresse IP");

        jButton1.setText("Envoyer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        SousReseau.setToolTipText("Saisir le masque de sous reseau: ");
        SousReseau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SousReseauActionPerformed(evt);
            }
        });

        jLabel2.setText("Masque de sous-réseau");

        sendPing.setText("Ping");
        sendPing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendPingActionPerformed(evt);
            }
        });

        AdresseIp1.setToolTipText("Saisir l'adresse ip: ");
        AdresseIp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdresseIp1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Adresse IP 2");

        jLabel4.setText("Masque de sous-réseau");

        SousReseau1.setToolTipText("Saisir l'adresse ip: ");
        SousReseau1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SousReseau1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(AdresseIp1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SousReseau, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(SousReseau1)
                            .addComponent(AdresseIp2, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(sendPing, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(99, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AdresseIp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SousReseau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jButton1)))
                .addGap(20, 20, 20)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AdresseIp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SousReseau1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(sendPing)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    /*
    * @return 
    */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        /**
         * Prend les informations entre chaque point (Adresse Ip et Masque sous
         * réseau)
         */
        
        String[] ip = AdresseIp1.getText().split("\\.");
        String[] mask = SousReseau.getText().split("\\.");

        if (ip.length != 4 || AdresseIp1.getText().length() > 16) {
            JOptionPane.showMessageDialog(null, "Entrer une adresse ip (1.X.X.X)");
            AdresseIp1.setText("");
            return;
        }
        if (mask.length != 4 || SousReseau.getText().length() > 16) {
            JOptionPane.showMessageDialog(null, "Entrer un masque de sous reseau (255.X.X.X)");
            SousReseau.setText("");
            return;
        }

        /**
         * Recupere valeur déclaré de l'adresse ip et du masque en une valeur 0
         * 0 = 10.X.X.X 
         * 1 = X.10.X.X 
         * 2 = X.X.10.X
         * 
         * num = valeur 1 de l'adresse ip
         * num1 = valeur 2 de l'adresse ip
         * num2 = valeur 3 de l'adresse ip
         * sousr = valeur 1 du masque de sous réseau
         */
        
        Integer num = Integer.valueOf(ip[0]);
        Integer num1 = Integer.valueOf(ip[1]);
        Integer num2 = Integer.valueOf(ip[2]);
        Integer sousr = Integer.valueOf(mask[0]);
    
        
               
        
        if (num <= 127 && sousr == 255) {
            JOptionPane.showMessageDialog(null, "Reseau Ip: " + AdresseIp1.getText());
            JOptionPane.showMessageDialog(null, "Nombre d'adresse disponible: 256");
//            JOptionPane.showMessageDialog(null, "Listes ip disponible: " + num + "." + num1 + "." + num2 + "." + "0" + " a " + num + "." + num1 + "." + num2 + "." + "254");
            JOptionPane.showMessageDialog(null, "Listes ip disponible: " + num + "." + "0" + "." + "0" + "." + "1" + " a " + num + "." + "255" + "." + "255" + "." + "254");
        } else if (num <= 127 && sousr < 255 || sousr > 255) {
            JOptionPane.showMessageDialog(null, "Masque de sous reseau incorect");
            
            
        } else if (num <= 172 && sousr == 255) {
            JOptionPane.showMessageDialog(null, "Reseau Ip: " + AdresseIp1.getText());
            JOptionPane.showMessageDialog(null, "Nombre d'adresse disponible: 65 534");
            JOptionPane.showMessageDialog(null, "Listes ip disponible: " + num + "." + num1 + "." + "0" + "." + "1" + " a " + num + "." + num1 + "." + "255" + "." + "254");
        } else if (num <= 172 && sousr < 255 || sousr > 255) {
            JOptionPane.showMessageDialog(null, "Masque de sous reseau incorect");

        } else if (num <= 192 && sousr == 255) {
            JOptionPane.showMessageDialog(null, "Reseau Ip: " + AdresseIp1.getText());
            JOptionPane.showMessageDialog(null, "Nombre d'adresse disponible: 16 777 214");
            JOptionPane.showMessageDialog(null, "Listes ip disponible: " + num + "." + num1 + "." + num2 + "." + "1" + " a " + num + "." + num1 + "." + num2 + "." + "254");
        } else if (num <= 192 && sousr < 255 || sousr > 255) {
            JOptionPane.showMessageDialog(null, "Masque de sous reseau incorect");

        } else {
            JOptionPane.showMessageDialog(null, "Reseau Ip: " + AdresseIp1.getText());
            JOptionPane.showMessageDialog(null, "Nombre d'adresse disponible: 256");
            JOptionPane.showMessageDialog(null, "Listes ip disponible: " + num + "." + num1 + "." + num2 + "0" + " a " + num + "." + num1 + "." + num2 + "." + "254");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void AdresseIp2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdresseIp2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AdresseIp2ActionPerformed

    public void keyTyped(KeyEvent k) {
        if (!Character.isDigit(k.getKeyChar())) {
            k.consume();
        }
    }

    private void SousReseauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SousReseauActionPerformed


    }//GEN-LAST:event_SousReseauActionPerformed

    private void sendPingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendPingActionPerformed

        /**
         * Prend les informations entre chaque point (Adresse Ip et Masque sous
         * réseau)
         * 
         */
        String[] ip = AdresseIp1.getText().split("\\.");
        String[] ip2 = AdresseIp2.getText().split("\\.");
        String[] mask = SousReseau.getText().split("\\.");
        String[] mask2 = SousReseau1.getText().split("\\.");

        if (ip.length != 4 || AdresseIp1.getText().length() > 16) {
            JOptionPane.showMessageDialog(null, "L'adresse Ip 1 entree n'est pas correcte");
            AdresseIp1.setText("");
            SousReseau.setText("");
            return;
        }
        if (ip2.length != 4 || AdresseIp2.getText().length() > 16) {
            JOptionPane.showMessageDialog(null, "L'adresse Ip 2 entree n'est pas correcte");
            AdresseIp2.setText("");
            SousReseau1.setText("");
            return;
        }
        if (mask.length != 4 || SousReseau.getText().length() > 16) {
            JOptionPane.showMessageDialog(null, "Entrer un masque de sous reseau (255.X.X.X)");
            SousReseau.setText("");
            return;
        }
        if (mask2.length != 4 || SousReseau1.getText().length() > 16) {
            JOptionPane.showMessageDialog(null, "Entrer un masque de sous reseau (255.X.X.X)");
            SousReseau1.setText("");
            return;
        }

        /**
         * Prend les informations entre chaque point (Adresse Ip et Masque sous
         * réseau)
         */
        
        String[] ping1 = AdresseIp1.getText().split("\\.");
        String[] ping2 = AdresseIp2.getText().split("\\.");

        /**
         * Recupere valeur déclaré de l'adresse ip et du masque en une valeur 
         * 0 = 10.X.X.X 
         * 1 = X.10.X.X 
         * 2 = X.X.10.X
         * 
         * val1 = valeur 1 de l'adresse ip 1
         * val2 = valeur 1 de l'adresse ip 2
         */
        Integer val1 = Integer.valueOf(ping1[0]);
        Integer val2 = Integer.valueOf(ping2[0]);

        
        if (val1 < val2 || val1 > val2) {
            JOptionPane.showMessageDialog(this, "Erreur les deux adresses ne peuvent pas communiquer");
            return;
//                JOptionPane.showMessageDialog(this, val1);
//                JOptionPane.showMessageDialog(this, val2);                   
        }
        
        if (val1 != val2) {
            JOptionPane.showMessageDialog(this, "Pingable");
            AdresseIp1.setText("");
            AdresseIp2.setText("");
            SousReseau.setText("");
            SousReseau1.setText("");

            /**
             * Permet de tester les valeurs reçu en cas de beug
             */
//                JOptionPane.showMessageDialog(this, val1);
//                JOptionPane.showMessageDialog(this, val2);             
        }



    }//GEN-LAST:event_sendPingActionPerformed

    private void AdresseIp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdresseIp1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AdresseIp1ActionPerformed

    private void SousReseau1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SousReseau1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SousReseau1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sousreseau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sousreseau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sousreseau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sousreseau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sousreseau().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AdresseIp1;
    private javax.swing.JTextField AdresseIp2;
    private javax.swing.JTextField SousReseau;
    private javax.swing.JTextField SousReseau1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton sendPing;
    // End of variables declaration//GEN-END:variables

    public void run() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
